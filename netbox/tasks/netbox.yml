- name: install required packages for netbox
  ansible.builtin.package:
    name:
      - python3
      - python3-pip
      - python3-venv
      - python3-dev
      - build-essential
      - libxml2-dev
      - libxslt1-dev
      - libffi-dev
      - libpq-dev
      - libssl-dev
      - zlib1g-dev
    state: present
  become: true

- name: create netbox directory
  ansible.builtin.file:
    path: /opt/netbox
    state: directory
  become: true

- name: clone netbox git repo latest stable
  ansible.builtin.git:
    repo: https://github.com/netbox-community/netbox.git
    dest: /opt/netbox
    depth: 1
    version: master
  become: true

- name: create netbox group
  ansible.builtin.group:
    name: netbox
    state: present
  become: true

- name: create netbox system user
  ansible.builtin.user:
    name: netbox
    group: netbox
    system: true
  become: true

- name: assign netbox user ownership of media directory
  ansible.builtin.file:
    path: /opt/netbox/netbox/media/
    state: directory
    recurse: yes
    owner: netbox
    group: netbox
  become: true

- name: assign netbox user ownership of reports directory
  ansible.builtin.file:
    path: /opt/netbox/netbox/reports/
    state: directory
    recurse: yes
    owner: netbox
    group: netbox
  become: true

- name: assign netbox user ownership of scripts directory
  ansible.builtin.file:
    path: /opt/netbox/netbox/scripts/
    state: directory
    recurse: yes
    owner: netbox
    group: netbox
  become: true

- name: copy example config python file
  ansible.builtin.copy:
    src: /opt/netbox/netbox/netbox/configuration_example.py
    dest: /opt/netbox/netbox/netbox/configuration.py
    remote_src: true
  become: true

- name: set config Allowed Hosts
  ansible.builtin.lineinfile:
    path: /opt/netbox/netbox/netbox/configuration.py
    search_string: 'ALLOWED_HOSTS = []'
    line: ALLOWED_HOSTS = ['{{ansible_hostname}}.kylegodinho.com', '{{ansible_default_ipv4.address}}']
    state: present
  become: true

- name: set config postgres username
  ansible.builtin.lineinfile:
    path: /opt/netbox/netbox/netbox/configuration.py
    search_string: 'PostgreSQL username'
    line: "    'USER': 'netbox',"
    state: present
  become: true

#lookup for just the password returns a list of 1 item (the password)
- name: set config postgres password
  ansible.builtin.lineinfile:
    path: /opt/netbox/netbox/netbox/configuration.py
    search_string: 'PostgreSQL password'
    line: "    'PASSWORD': '{{ lookup('community.general.bitwarden', 'NetboxDBPassword', field='password')[0]}}',"
    state: present
  become: true

- name: generate secret key
  ansible.builtin.command:
    chdir: /opt/netbox/netbox
    cmd: python3 generate_secret_key.py
  become: true
  register: secret_key

- name: set config secret key
  ansible.builtin.lineinfile:
    path: /opt/netbox/netbox/netbox/configuration.py
    search_string: 'SECRET_KEY'
    line: "SECRET_KEY = '{{secret_key.stdout}}'"
    state: present
  become: true

- name: run upgrade script
  ansible.builtin.command:
    chdir: /opt/netbox
    cmd: bash upgrade.sh
  become: true

- name: install pexpect in venv to use to create superuser
  ansible.builtin.pip:
    name:
      - pexpect
  environment:
    PATH: '/opt/netbox/venv/bin:{{ ansible_env.PATH }}'
  become: true

- name: set netbox super user
  ansible.builtin.expect:
    command: python3 /opt/netbox/netbox/manage.py createsuperuser
    responses:
      (?i)Username: "{{ lookup('community.general.bitwarden', 'netboxSuperUser', field='username')[0]}}"
      (?i)Email: "{{ lookup('community.general.bitwarden', 'netboxSuperUser', field='email')[0]}}"
      (?i)Password: "{{ lookup('community.general.bitwarden', 'netboxSuperUser', field='password')[0]}}"
  environment:
    PATH: '/opt/netbox/venv/bin:{{ ansible_env.PATH }}'
  become: true
  no_log: true

- name: link housekeeping task
  ansible.builtin.file:
    src: /opt/netbox/contrib/netbox-housekeeping.sh
    dest: /etc/cron.daily/netbox-housekeeping
    state: link
  become: true

